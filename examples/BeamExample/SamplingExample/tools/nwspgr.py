################################################
# nwSpGr : samples and weights for numerical integration on sparse grid (Smolyak)
#
# Author : Chen Song
# Institute : 1) Engineering Mathematics and Computing Lab (EMCL), Heidelberg Univeristy
#	      2) Heidelberg Institute for Theoretical Studies
#
# This script is rewritten based on the Matlab code from Florian Heiss, and Viktor Winschel
# Florian Heiss : Univeristy of Munich, Department of Economics
# Viktor Winschel : University of Mannheim, Department of Economics
#
# The orginal Matlab is published on the website : http://www.sparse-grids.de/
#
#
# parameters :
# 
# type : 
#	"KPU": Nested rule for unweighted integral over [0,1]
#	"KPN": Nested rule for integral with Gaussian weight
#	"GQU": Gaussian quadrature for unweighted integral over [0,1] (Gauss-Legendre)
#	"GQN": Gaussian quadrature for integral with Gaussian weight (Gauss-Hermite)
#	
# dim  : 
#	dimension of the integration problem
#
# k    : 
#	Accuracy level. The rule will be exact for polynomial up to total order 2k-1
#
# sym  :
#	symmetric
################################################

import numpy as np
from math import factorial



def feval(funcName, *args):
        return eval(funcName)(*args)


def GQU(l) :
	if l == 1 :
		n = np.array([0.5])
		w = np.array([1.0])
	elif l == 2 :
		n = np.array([0.788675134595])
		w = np.array([0.5])
	elif l == 3 :
		n = np.array([[0.5],[0.887298334621]])
		w = np.array([[0.444444444444],[0.277777777778]]) 
	elif l == 4 :
		n = np.array([[0.669990521792],[0.930568155797]])
		w = np.array([[0.326072577431],[0.173927422569]])
	elif l == 5 :
		n = np.array([[0.5],[0.769234655053],[0.953089922969]])
		w = np.array([[0.284444444444],[0.23931433525],[0.118463442528]])
	elif l == 6 :
		n = np.array([[0.619309593042],[0.830604693233],[0.966234757102]])
		w = np.array([[0.233956967286],[0.180380786524],[0.0856622461896]])
	elif l == 7 :
		n = np.array([[0.5],[0.702922575689],[0.8707655928],[0.974553956171]])
		w = np.array([[0.208979591837],[0.190915025253],[0.139852695745],[0.0647424830844]])
	elif l == 8 :
		n = np.array([[0.591717321248],[0.762766204958],[0.898333238707],[0.980144928249]])
		w = np.array([[0.181341891689],[0.156853322939],[0.111190517227],[0.0506142681452]])
	elif l == 9 :
		n = np.array([[0.5],[0.662126711702],[0.80668571635],[0.918015553663],[0.984080119754]])
		w = np.array([[0.165119677501],[0.15617353852],[0.130305348201],[0.0903240803474],[0.0406371941808]])
	elif l == 10 :
		n = np.array([[0.574437169491],[0.716697697065],[0.83970478415],[0.932531683344],[0.986953264259]])
		w = np.array([[0.147762112357],[0.134633359655],[0.109543181258],[0.0747256745753],[0.0333356721543]])	
	elif l == 11 :
		n = np.array([[0.5],[0.634771577976],[0.759548064603],[0.865076002787],[0.943531299884],[0.989114329073]])
		w = np.array([[0.136462543389],[0.131402272255],[0.116596882296],[0.0931451054639],[0.0627901847325],[0.0278342835581]])		
	elif l == 12 :
		n = np.array([[0.562616704256],[0.683915749499],[0.793658977143],[0.884951337097],[0.952058628185],[0.990780317123]])
		w = np.array([[0.124573522907],[0.116746268269],[0.101583713362],[0.0800391642717],[0.0534696629977],[0.0235876681933]])		
	elif l == 13 :
		n = np.array([[0.5],[0.615229157978],[0.724246375518],[0.82117466972],[0.900789045367],[0.958799199611],[0.992091527359]])
		w = np.array([[0.116275776615],[0.113141590131],[0.103908023768],[0.089072990381],[0.0694367551099],[0.0460607499189],[0.0202420023827]])
	elif l == 14 :
		n = np.array([[0.554027474354],[0.659556184464],[0.757624318179],[0.843646452406],[0.913600657535],[0.964217441832],[0.993141904348]])
		w = np.array([[0.107631926732],[0.102599231861],[0.092769198739],[0.0786015835791],[0.060759285344],[0.0400790435799],[0.0175597301659]])
	elif l == 15 :
		n = np.array([[0.5],[0.600597046999],[0.697075673539],[0.785486086304],[0.86220886568],[0.924103291705],[0.9686366962],[0.99399625901]])
		w = np.array([[0.101289120963],[0.0992157426636],[0.0930805000078],[0.0831346029085],[0.0697853389631],[0.0535796102336],[0.0351830237441],[0.0153766209981]])
	elif l == 16 :
		n = np.array([[0.547506254919],[0.64080177539],[0.729008388829],[0.808938122201],[0.877702204178],[0.932815601194],[0.972287511537],[0.994700467496]])
		w = np.array([[0.0947253052275],[0.0913017075225],[0.0845782596975],[0.0747979944083],[0.0623144856278],[0.0475792558412],[0.0311267619693],[0.0135762297059]])
	elif l == 17 :
		n = np.array([[0.5],[0.589242090748],[0.675615881727],[0.756345268543],[0.828835579608],[0.890757001948],[0.940119576863],[0.975337760884],[0.995287737657]])
		w = np.array([[0.0897232351781],[0.0882813526835],[0.0840020510782],[0.0770228805384],[0.0675681842343],[0.0559419235967],[0.0425180741586],[0.027729764687],[0.0120741514343]])
	elif l == 18 :
		n = np.array([[0.542387506521],[0.625943112846],[0.705875580731],[0.779885415537],[0.84584352153],[0.901852479486],[0.946301233249],[0.977911974786],[0.99578258421]])
		w = np.array([[0.0845711914816],[0.0821382418729],[0.0773423375631],[0.0703214573353],[0.0612776033557],[0.0504710220531],[0.0382128651274],[0.0248572744475],[0.0108080067632]])
	elif l == 19 :
		n = np.array([[0.5],[0.58017932282],[0.658282049982],[0.732285370688],[0.800272652331],[0.860483088668],[0.911357328269],[0.951577951807],[0.980104076067],[0.996203421922]])
		w = np.array([[0.0805272249244],[0.079484421697],[0.0763830210329],[0.0713033510868],[0.0643769812697],[0.0557833227737],[0.0457450108112],[0.0345222713688],[0.0224071133828],[0.00973089411486]])
	elif l == 20 :
		n = np.array([[0.538263260567],[0.613892925571],[0.686853044358],[0.755433500975],[0.818026840363],[0.87316595323],[0.919558485911],[0.956117214126],[0.981985963639],[0.996564299593]])
		w = np.array([[0.0763766935654],[0.0745864932363],[0.0710480546592],[0.0658443192246],[0.0590972659808],[0.0509650599086],[0.0416383707884],[0.0313360241671],[0.0203007149002],[0.00880700356958]])
	elif l == 21 : 
		n = np.array([[0.5],[0.57278092708],[0.644010658401],[0.712171060104],[0.775809417944],[0.833569402099],[0.884219981738],[0.926681682292],[0.960049667075],[0.983613419283],[0.99687608531]])
		w = np.array([[0.0730405668248],[0.072262201995],[0.0699436973955],[0.0661344693167],[0.0609157080269],[0.0543986495836],[0.046722211728],[0.0380500568142],[0.0285672127134],[0.0184768948854],[0.00800861412889]])
	elif l == 22 :
		n = np.array([[0.53486963666],[0.603930213344],[0.670967910446],[0.734677918993],[0.793820201753],[0.847243631593],[0.89390840299],[0.93290628886],[0.963478386094],[0.985030248918],[0.997147292741]])
		w = np.array([[0.0696259364278],[0.068270749173],[0.0655867523935],[0.0616261884053],[0.0564661480403],[0.0502070722214],[0.0429708031085],[0.0348982342123],[0.0261466675763],[0.0168874507924],[0.00731399764914]])
	elif l == 23 :
		n = np.array([[0.5],[0.566628412149],[0.632067840485],[0.695150519015],[0.754750738923],[0.809804937882],[0.859330681566],[0.902444200809],[0.938376179135],[0.966485543413],[0.986271235609],[0.997384667499]])
		w = np.array([[0.0668272860931],[0.0662310197023],[0.064452861094],[0.0615245421534],[0.0574983201112],[0.0524460457323],[0.04645788303],[0.0396407058884],[0.0321162107043],[0.0240188358655],[0.0154940029285],[0.00670592974357]])
	elif l == 24 :
		n = np.array([[0.532028446431],[0.595559433737],[0.657521339848],[0.716896753813],[0.772710735694],[0.824046825968],[0.870062095789],[0.910000992987],[0.943207763502],[0.969137276001],[0.987364277986],[0.997593609999]])
		w = np.array([[0.0639690976734],[0.0629187281734],[0.0608352364639],[0.0577528340269],[0.053722135058],[0.0488093260521],[0.043095080766],[0.0366732407055],[0.0296492924577],[0.0221387194087],[0.0142656943145],[0.00617061489999]])
	elif l == 25 : 
		n = np.array([[0.5],[0.561432346305],[0.62193344186],[0.680586152905],[0.736501365723],[0.788831465121],[0.836783184237],[0.879629631519],[0.91672131438],[0.947495998939],[0.971487285614],[0.98833196073],[0.997778484895]])
		w = np.array([[0.0615880268634],[0.0611212214952],[0.0597278817679],[0.0574291295729],[0.0542598122371],[0.0502679745335],[0.0455141309915],[0.0400703501675],[0.0340191669062],[0.0274523479879],[0.0204695783507],[0.0131774933075],[0.00569689925051]])
	return n,w

def GQN(l) :
	if l == 1 :
		n = np.array([0.0])
		w = np.array([1.0])
	elif l == 2 :
		n = np.array([1.0])
		w = np.array([0.5])
	elif l == 3 :
		n = np.array([[0.0],[1.73205080757]])
		w = np.array([[0.666666666667],[0.166666666667]])
	elif l == 4 :
		n = np.array([[0.741963784303],[2.33441421834]])
		w = np.array([[0.454124145232],[0.0458758547681]])	
	elif l == 5 :
		n = np.array([[0.0],[1.35562617997],[2.85697001387]])
		w = np.array([[0.533333333333],[0.222075922006],[0.0112574113277]])
	elif l == 6 :
		n = np.array([[0.616706590193],[1.88917587775],[3.32425743355]])
		w = np.array([[0.408828469556],[0.0886157460419],[0.00255578440206]])
	elif l == 7 :
		n = np.array([[0.0],[1.15440539474],[2.36675941073],[3.75043971773]])
		w = np.array([[0.457142857143],[0.240123178605],[0.0307571239676],[0.000548268855972]])
	elif l == 8 :
		n = np.array([[0.539079811351],[1.63651904244],[2.80248586129],[4.14454718613]])
		w = np.array([[0.373012257679],[0.117239907662],[0.00963522012079],[0.000112614538375]])
	elif l == 9 :
		n = np.array([[0.0],[1.02325566379],[2.07684797868],[3.20542900286],[4.5127458634]])
		w = np.array([[0.406349206349],[0.244097502895],[0.0499164067652],[0.00278914132123],[2.23458440077e-05]])
	elif l == 10 :
		n = np.array([[0.484935707515],[1.46598909439],[2.48432584164],[3.58182348355],[4.85946282833]])
		w = np.array([[0.344642334932],[0.13548370298],[0.0191115805008],[0.000758070934312],[4.31065263072e-06]])
	elif l == 11 :
		n = np.array([[0.0],[0.928868997381],[1.87603502015],[2.86512316064],[3.93616660713],[5.18800122437]])
		w = np.array([[0.369408369408],[0.242240299874],[0.0661387460711],[0.00672028523554],[0.000195671930271],[8.12184979021e-07]])
	elif l == 12 :
		n = np.array([[0.444403001944],[1.34037519715],[2.259464451],[3.22370982877],[4.27182584793],[5.50090170447]])
		w = np.array([[0.321664361513],[0.146967048045],[0.0291166879124],[0.00220338068753],[4.83718492259e-05],[1.49992716764e-07]])
	elif l == 13 :
		n = np.array([[0.0],[0.856679493519],[1.72541837959],[2.62068997343],[3.56344438028],[4.59139844894],[5.80016725239]])
		w = np.array([[0.340992340992],[0.237871522964],[0.0791689558605],[0.011770560506],[0.000681236350443],[1.15265965273e-05],[2.72262764281e-08]])
	elif l == 14 :
		n = np.array([[0.412590457955],[1.24268895549],[2.0883447457],[2.96303657984],[3.88692457506],[4.89693639735],[6.0874095469]])
		w = np.array([[0.302634626813],[0.154083339843],[0.0386501088243],[0.00442891910695],[0.000200339553761],[2.66099134407e-06],[4.86816125775e-09]])
	elif l == 15 :
		n = np.array([[0.0],[0.799129068325],[1.60671006903],[2.43243682701],[3.2890824244],[4.19620771127],[5.1900935913],[6.36394788883]])
		w = np.array([[0.31825951826],[0.23246229361],[0.0894177953998],[0.0173657744921],[0.00156735750355],[5.64214640519e-05],[5.97541959792e-07],[8.58964989963e-10]])
	elif l == 16 :
		n = np.array([[0.386760604501],[1.16382910055],[1.95198034572],[2.76024504763],[3.60087362417],[4.49295530252],[5.47222570595],[6.63087819839]])
		w = np.array([[0.286568521238],[0.158338372751],[0.047284752354],[0.00726693760118],[0.000525984926574],[1.53000321625e-05],[1.30947321629e-07],[1.49781472316e-10]])
	elif l == 17 :
		n = np.array([[0.0],[0.751842600704],[1.5098833078],[2.28101944025],[3.07379717533],[3.9000657172],[4.77853158963],[5.74446007866],[6.8891224399]])
		w = np.array([[0.299538370127],[0.226706308469],[0.0974063711627],[0.0230866570257],[0.00285894606228],[0.000168491431551],[4.01267944798e-06],[2.80801611793e-08],[2.58431491937e-11]])
	elif l == 18 :
		n = np.array([[0.365245755508],[1.09839551809],[1.83977992151],[2.59583368891],[3.37473653578],[4.18802023163],[5.05407268544],[6.00774591136],[7.13946484915]])
		w = np.array([[0.272783234654],[0.160685303894],[0.0548966324802],[0.0105165177519],[0.00106548479629],[5.17989614412e-05],[1.02155239764e-06],[5.90548847884e-09],[4.41658876936e-12]])
	elif l == 19 :
		n = np.array([[0.0],[0.712085044042],[1.42887667608],[2.15550276132],[2.89805127652],[3.66441654745],[4.46587262683],[5.32053637734],[6.26289115651],[7.38257902403]])
		w = np.array([[0.283773192752],[0.220941712199],[0.103603657276],[0.0286666910301],[0.00450723542034],[0.000378502109414],[1.53511459547e-05],[2.53222003209e-07],[1.22037084845e-09],[7.48283005406e-13]])
	elif l == 20 :
		n = np.array([[0.346964157081],[1.0429453488],[1.74524732081],[2.45866361117],[3.18901481655],[3.94396735066],[4.73458133405],[5.57873880589],[6.51059015701],[7.61904854168]])
		w = np.array([[0.26079306345],[0.161739333984],[0.061506372064],[0.0139978374471],[0.00183010313108],[0.000128826279962],[4.40212109023e-06],[6.12749025998e-08],[2.48206236232e-10],[1.25780067244e-13]])
	elif l == 21 :
		n = np.array([[0.0],[0.678045692441],[1.35976582321],[2.04910246826],[2.75059298105],[3.46984669048],[4.21434398169],[4.99496394478],[5.8293820073],[6.75144471872],[7.84938289511]])
		w = np.array([[0.270260183573],[0.215333715695],[0.108392285626],[0.0339527297865],[0.00643969705141],[0.000708047795482],[4.21923474255e-05],[1.22535483615e-06],[1.45066128449e-08],[4.97536860412e-11],[2.09899121957e-14]])
	elif l == 22 :
		n = np.array([[0.331179315715],[0.995162422271],[1.66412483912],[2.34175999629],[3.03240422783],[3.74149635027],[4.47636197731],[5.24772443371],[6.07307495112],[6.98598042402],[8.07402998402]])
		w = np.array([[0.250243596587],[0.161906293414],[0.0671963114289],[0.0175690728808],[0.00280876104758],[0.000262283303256],[1.33459771268e-05],[3.31985374981e-07],[3.36651415946e-09],[9.84137898235e-12],[3.47946064788e-15]])
	elif l == 23 :
		n = np.array([[0.0],[0.648471153534],[1.2998764683],[1.95732755293],[2.62432363406],[3.30504002175],[4.00477532173],[4.73072419745],[5.49347398647],[6.31034985445],[7.21465943505],[8.29338602742]])
		w = np.array([[0.258509740809],[0.209959669578],[0.112073382603],[0.0388671837035],[0.00857967839147],[0.0011676286375],[9.34081860903e-05],[4.08997724499e-06],[8.77506248386e-08],[7.6708888624e-10],[1.92293531157e-12],[5.7323831678e-16]])
	elif l == 24 :
		n = np.array([[0.317370096629],[0.953421922932],[1.59348042982],[2.24046785169],[2.89772864322],[3.56930676407],[4.26038360502],[4.97804137464],[5.73274717525],[6.5416750051],[7.43789066602],[8.5078035192]])
		w = np.array([[0.240870115547],[0.161459512867],[0.0720693640172],[0.021126344409],[0.00397660892918],[0.000464718718779],[3.20950056527e-05],[1.21765974544e-06],[2.26746167348e-08],[1.71866492796e-10],[3.71497415276e-13],[9.39019368904e-17]])
	elif l == 25 :
		n = np.array([[0.0],[0.622462279186],[1.24731197562],[1.87705836995],[2.51447330395],[3.16277567939],[3.82590056997],[4.50892992297],[5.21884809364],[5.96601469061],[6.76746496381],[7.65603795539],[8.7175976784]])
		w = np.array([[0.248169351176],[0.20485102565],[0.114880924304],[0.0433799701676],[0.0108567559915],[0.00175785040526],[0.000177766906927],[1.06721949052e-05],[3.53015256025e-07],[5.7380238689e-09],[3.79115000048e-11],[7.102103037e-14],[1.530038998e-17]])
	return n,w

def KPU(l) :
	if l == 1 :
		n = np.array([0.5])
		w = np.array([1.0])
	elif l == 2 :
		n = np.array([[0.5],[0.8872983]])
		w = np.array([[0.4444444],[0.2777778]])
	elif l == 3 :
		n = np.array([[0.5],[0.8872983]])
		w = np.array([[0.4444444],[0.2777778]])
	elif l == 4 :
		n = np.array([[0.5],[0.7171219],[0.8872983],[0.9802456]])
		w = np.array([[0.225458322546],[0.20069872007],[0.134244013424],[0.0523281052328]])
	elif l == 5 :
		n = np.array([[0.5],[0.7171219],[0.8872983],[0.9802456]])
		w = np.array([[0.225458322546],[0.20069872007],[0.134244013424],[0.0523281052328]])
	elif l == 6 :
		n = np.array([[0.5],[0.7171219],[0.8872983],[0.9802456]])
		w = np.array([[0.225458322546],[0.20069872007],[0.134244013424],[0.0523281052328]])
	elif l == 7 :
		n = np.array([[0.5],[0.6116933],[0.7171219],[0.8105515],[0.8872983],[0.9442296],[0.9802456],[0.996916]])
		w = np.array([[0.1127552],[0.1095784],[0.1003143],[0.085756],[0.0672076],[0.0464636],[0.0258016],[0.0085009]])
	elif l == 8 :
		n = np.array([[0.5],[0.6116933],[0.7171219],[0.8105515],[0.8872983],[0.9442296],[0.9802456],[0.996916]])
		w = np.array([[0.1127552],[0.1095784],[0.1003143],[0.085756],[0.0672076],[0.0464636],[0.0258016],[0.0085009]])
	elif l == 9 :
		n = np.array([[0.5],[0.6116933],[0.7171219],[0.8105515],[0.8872983],[0.9442296],[0.9802456],[0.996916]])
		w = np.array([[0.1127552],[0.1095784],[0.1003143],[0.085756],[0.0672076],[0.0464636],[0.0258016],[0.0085009]])
	elif l == 10 :
		n = np.array([[0.5],[0.6116933],[0.7171219],[0.8105515],[0.8872983],[0.9442296],[0.9802456],[0.996916]])
		w = np.array([[0.1127552],[0.1095784],[0.1003143],[0.085756],[0.0672076],[0.0464636],[0.0258016],[0.0085009]])	
	elif l == 11 :
		n = np.array([[0.5],[0.6116933],[0.7171219],[0.8105515],[0.8872983],[0.9442296],[0.9802456],[0.996916]])
		w = np.array([[0.1127552],[0.1095784],[0.1003143],[0.085756],[0.0672076],[0.0464636],[0.0258016],[0.0085009]])
	elif l == 12 :
		n = np.array([[0.5],[0.6116933],[0.7171219],[0.8105515],[0.8872983],[0.9442296],[0.9802456],[0.996916]])
		w = np.array([[0.1127552],[0.1095784],[0.1003143],[0.085756],[0.0672076],[0.0464636],[0.0258016],[0.0085009]])
	elif l == 13 :
		n = np.array([[0.5],[0.5562445],[0.6116933],[0.6655677],[0.7171219],[0.7656599],[0.8105515],[0.8512481],[0.8872983],[0.918363],[0.9442296],[0.9648274],[0.9802456],[0.9907656],[0.996916],[0.9995491]])
		w = np.array([[0.0563776],[0.0559784],[0.0547892],[0.0528349],[0.0501571],[0.0468136],[0.042878],[0.0384398],[0.0336039],[0.0284898],[0.0232314],[0.0179786],[0.0129038],[0.008223],[0.0042173],[0.0012724]])
	elif l == 14 :
		n = np.array([[0.5],[0.5562445],[0.6116933],[0.6655677],[0.7171219],[0.7656599],[0.8105515],[0.8512481],[0.8872983],[0.918363],[0.9442296],[0.9648274],[0.9802456],[0.9907656],[0.996916],[0.9995491]])
		w = np.array([[0.0563776],[0.0559784],[0.0547892],[0.0528349],[0.0501571],[0.0468136],[0.042878],[0.0384398],[0.0336039],[0.0284898],[0.0232314],[0.0179786],[0.0129038],[0.008223],[0.0042173],[0.0012724]])
	elif l == 15 :
		n = np.array([[0.5],[0.5562445],[0.6116933],[0.6655677],[0.7171219],[0.7656599],[0.8105515],[0.8512481],[0.8872983],[0.918363],[0.9442296],[0.9648274],[0.9802456],[0.9907656],[0.996916],[0.9995491]])
		w = np.array([[0.0563776],[0.0559784],[0.0547892],[0.0528349],[0.0501571],[0.0468136],[0.042878],[0.0384398],[0.0336039],[0.0284898],[0.0232314],[0.0179786],[0.0129038],[0.008223],[0.0042173],[0.0012724]])
	elif l == 16 :
		n = np.array([[0.5],[0.5562445],[0.6116933],[0.6655677],[0.7171219],[0.7656599],[0.8105515],[0.8512481],[0.8872983],[0.918363],[0.9442296],[0.9648274],[0.9802456],[0.9907656],[0.996916],[0.9995491]])
		w = np.array([[0.0563776],[0.0559784],[0.0547892],[0.0528349],[0.0501571],[0.0468136],[0.042878],[0.0384398],[0.0336039],[0.0284898],[0.0232314],[0.0179786],[0.0129038],[0.008223],[0.0042173],[0.0012724]])
	elif l == 17 :
		n = np.array([[0.5],[0.5562445],[0.6116933],[0.6655677],[0.7171219],[0.7656599],[0.8105515],[0.8512481],[0.8872983],[0.918363],[0.9442296],[0.9648274],[0.9802456],[0.9907656],[0.996916],[0.9995491]])
		w = np.array([[0.0563776],[0.0559784],[0.0547892],[0.0528349],[0.0501571],[0.0468136],[0.042878],[0.0384398],[0.0336039],[0.0284898],[0.0232314],[0.0179786],[0.0129038],[0.008223],[0.0042173],[0.0012724]])
	elif l == 18 :
		n = np.array([[0.5],[0.5562445],[0.6116933],[0.6655677],[0.7171219],[0.7656599],[0.8105515],[0.8512481],[0.8872983],[0.918363],[0.9442296],[0.9648274],[0.9802456],[0.9907656],[0.996916],[0.9995491]])
		w = np.array([[0.0563776],[0.0559784],[0.0547892],[0.0528349],[0.0501571],[0.0468136],[0.042878],[0.0384398],[0.0336039],[0.0284898],[0.0232314],[0.0179786],[0.0129038],[0.008223],[0.0042173],[0.0012724]])
	elif l  == 19 :
		n = np.array([[0.5],[0.5562445],[0.6116933],[0.6655677],[0.7171219],[0.7656599],[0.8105515],[0.8512481],[0.8872983],[0.918363],[0.9442296],[0.9648274],[0.9802456],[0.9907656],[0.996916],[0.9995491]])
		w = np.array([[0.0563776],[0.0559784],[0.0547892],[0.0528349],[0.0501571],[0.0468136],[0.042878],[0.0384398],[0.0336039],[0.0284898],[0.0232314],[0.0179786],[0.0129038],[0.008223],[0.0042173],[0.0012724]])
	elif l == 20 :
		n = np.array([[0.5],[0.5562445],[0.6116933],[0.6655677],[0.7171219],[0.7656599],[0.8105515],[0.8512481],[0.8872983],[0.918363],[0.9442296],[0.9648274],[0.9802456],[0.9907656],[0.996916],[0.9995491]])
		w = np.array([[0.0563776],[0.0559784],[0.0547892],[0.0528349],[0.0501571],[0.0468136],[0.042878],[0.0384398],[0.0336039],[0.0284898],[0.0232314],[0.0179786],[0.0129038],[0.008223],[0.0042173],[0.0012724]])
	elif l == 21 :
		n = np.array([[0.5],[0.5562445],[0.6116933],[0.6655677],[0.7171219],[0.7656599],[0.8105515],[0.8512481],[0.8872983],[0.918363],[0.9442296],[0.9648274],[0.9802456],[0.9907656],[0.996916],[0.9995491]])
		w = np.array([[0.0563776],[0.0559784],[0.0547892],[0.0528349],[0.0501571],[0.0468136],[0.042878],[0.0384398],[0.0336039],[0.0284898],[0.0232314],[0.0179786],[0.0129038],[0.008223],[0.0042173],[0.0012724]])
	elif l == 22 :
		n = np.array([[0.5],[0.5562445],[0.6116933],[0.6655677],[0.7171219],[0.7656599],[0.8105515],[0.8512481],[0.8872983],[0.918363],[0.9442296],[0.9648274],[0.9802456],[0.9907656],[0.996916],[0.9995491]])
		w = np.array([[0.0563776],[0.0559784],[0.0547892],[0.0528349],[0.0501571],[0.0468136],[0.042878],[0.0384398],[0.0336039],[0.0284898],[0.0232314],[0.0179786],[0.0129038],[0.008223],[0.0042173],[0.0012724]])
	elif l == 23 :
		n = np.array([[0.5],[0.5562445],[0.6116933],[0.6655677],[0.7171219],[0.7656599],[0.8105515],[0.8512481],[0.8872983],[0.918363],[0.9442296],[0.9648274],[0.9802456],[0.9907656],[0.996916],[0.9995491]])
		w = np.array([[0.0563776],[0.0559784],[0.0547892],[0.0528349],[0.0501571],[0.0468136],[0.042878],[0.0384398],[0.0336039],[0.0284898],[0.0232314],[0.0179786],[0.0129038],[0.008223],[0.0042173],[0.0012724]])
	elif l == 24 :
		n = np.array([[0.5],[0.5562445],[0.6116933],[0.6655677],[0.7171219],[0.7656599],[0.8105515],[0.8512481],[0.8872983],[0.918363],[0.9442296],[0.9648274],[0.9802456],[0.9907656],[0.996916],[0.9995491]])
		w = np.array([[0.0563776],[0.0559784],[0.0547892],[0.0528349],[0.0501571],[0.0468136],[0.042878],[0.0384398],[0.0336039],[0.0284898],[0.0232314],[0.0179786],[0.0129038],[0.008223],[0.0042173],[0.0012724]])	
	elif l == 25 :
		n = np.array([[0.5],[0.5281721],[0.5562445],[0.5841177],[0.6116933],[0.6388749],[0.6655677],[0.6916797],[0.7171219],[0.741809],[0.7656599],[0.7885979],[0.8105515],[0.8314548],[0.8512481],[0.869878],[0.8872983],[0.9034703],[0.918363],[0.931954],[0.9442296],[0.9551856],[0.9648274],[0.9731714],[0.9802456],[0.9860914],[0.9907656],[0.9943424],[0.996916],[0.9986031],[0.9995491],[0.9999365]])
		w = np.array([[0.0281888],[0.0281388],[0.0279892],[0.0277407],[0.0273946],[0.0269527],[0.0264175],[0.0257916],[0.0250786],[0.0242822],[0.0234068],[0.0224573],[0.021439],[0.0203578],[0.0192199],[0.0180322],[0.0168019],[0.0155368],[0.0142449],[0.0129348],[0.0116157],[0.0102971],[0.0089893],[0.0077034],[0.0064519],[0.0052491],[0.0041115],[0.0030578],[0.0021088],[0.0012895],[0.0006326],[0.0001816]])
	return n,w

def KPN(l) :
	if l == 1 :
		n = np.array([0.0])
		w = np.array([1.0])
	elif l == 2 :
		n = np.array([[0.0],[1.73205080757]])
		w = np.array([[0.666666666667],[0.166666666667]])
	elif l == 3 :
		n = np.array([[0.0],[1.73205080757]])
		w = np.array([[0.666666666667],[0.166666666667]])
	elif l == 4 :
		n = np.array([[0.0],[0.741095349995],[1.73205080757],[4.18495601767]])
		w = np.array([[0.458744868257],[0.131378606983],[0.13855327473],[0.000695684158369]])
	elif l == 5 :
		n = np.array([[0.0],[0.741095349995],[1.73205080757],[2.86127957606],[4.18495601767]])
		w = np.array([[0.253968253968],[0.270074329578],[0.0948509485095],[0.00799632547089],[9.42694575565e-05]])
	elif l == 6 :
		n = np.array([[0.0],[0.741095349995],[1.73205080757],[2.86127957606],[4.18495601767]])
		w = np.array([[0.253968253968],[0.270074329578],[0.0948509485095],[0.00799632547089],[9.42694575565e-05]])
	elif l == 7 :
		n = np.array([[0.0],[0.741095349995],[1.73205080757],[2.86127957606],[4.18495601767]])
		w = np.array([[0.253968253968],[0.270074329578],[0.0948509485095],[0.00799632547089],[9.42694575565e-05]])
	elif l == 8 :
		n = np.array([[0.0],[0.741095349995],[1.73205080757],[2.86127957606],[4.18495601767]])
		w = np.array([[0.253968253968],[0.270074329578],[0.0948509485095],[0.00799632547089],[9.42694575565e-05]])
	elif l == 9 :
		n = np.array([[0.0],[0.741095349995],[1.23042363403],[1.73205080757],[2.59608311505],[2.86127957606],[4.18495601767],[5.18701603991],[6.36339449434]])
		w = np.array([[0.266922230335],[0.254561232042],[0.0141926548264],[0.088681002152],[0.00196567709388],[0.00703348023783],[0.000105637836154],[- 8.20492075415e-07],[2.11364995054e-08]])
	elif l == 10 :
		n = np.array([[0.0],[0.741095349995],[1.23042363403],[1.73205080757],[2.59608311505],[2.86127957606],[3.2053337945],[4.18495601767],[5.18701603991],[6.36339449434]])
		w = np.array([[0.303467199854],[0.20832499165],[0.0611517301252],[0.0640960546868],[0.0180852342548],[- 0.00633722479337],[0.00288488043651],[6.01233694598e-05],[6.09480873147e-07],[8.62968460223e-10]])
	elif l == 11 :
		n = np.array([[0.0],[0.741095349995],[1.23042363403],[1.73205080757],[2.59608311505],[2.86127957606],[3.2053337945],[4.18495601767],[5.18701603991],[6.36339449434]])
		w = np.array([[0.303467199854],[0.20832499165],[0.0611517301252],[0.0640960546868],[0.0180852342548],[- 0.00633722479337],[0.00288488043651],[6.01233694598e-05],[6.09480873147e-07],[8.62968460223e-10]])
	elif l == 12 :
		n = np.array([[0.0],[0.741095349995],[1.23042363403],[1.73205080757],[2.59608311505],[2.86127957606],[3.2053337945],[4.18495601767],[5.18701603991],[6.36339449434]])
		w = np.array([[0.303467199854],[0.20832499165],[0.0611517301252],[0.0640960546868],[0.0180852342548],[- 0.00633722479337],[0.00288488043651],[6.01233694598e-05],[6.09480873147e-07],[8.62968460223e-10]])
	elif l == 13 :
		n = np.array([[0.0],[0.741095349995],[1.23042363403],[1.73205080757],[2.59608311505],[2.86127957606],[3.2053337945],[4.18495601767],[5.18701603991],[6.36339449434]])
		w = np.array([[0.303467199854],[0.20832499165],[0.0611517301252],[0.0640960546868],[0.0180852342548],[- 0.00633722479337],[0.00288488043651],[6.01233694598e-05],[6.09480873147e-07],[8.62968460223e-10]])
	elif l == 14 :
		n = np.array([[0.0],[0.741095349995],[1.23042363403],[1.73205080757],[2.59608311505],[2.86127957606],[3.2053337945],[4.18495601767],[5.18701603991],[6.36339449434]])
		w = np.array([[0.303467199854],[0.20832499165],[0.0611517301252],[0.0640960546868],[0.0180852342548],[- 0.00633722479337],[0.00288488043651],[6.01233694598e-05],[6.09480873147e-07],[8.62968460223e-10]])
	elif l == 15 :
		n = np.array([[0.0],[0.741095349995],[1.23042363403],[1.73205080757],[2.59608311505],[2.86127957606],[3.2053337945],[4.18495601767],[5.18701603991],[6.36339449434]])
		w = np.array([[0.303467199854],[0.20832499165],[0.0611517301252],[0.0640960546868],[0.0180852342548],[- 0.00633722479337],[0.00288488043651],[6.01233694598e-05],[6.09480873147e-07],[8.62968460223e-10]])
	elif l == 16 :
		n = np.array([[0.0],[0.24899229758],[0.741095349995],[1.23042363403],[1.73205080757],[2.23362606168],[2.59608311505],[2.86127957606],[3.2053337945],[3.63531851904],[4.18495601767],[5.18701603991],[6.36339449434],[7.1221067008],[7.98077179859],[9.01693978989]])
		w = np.array([[0.258900053242],[0.02812810154],[0.199688635117],[0.0654173928361],[0.0617185325659],[0.00176084755813],[0.0165924926989],[- 0.00556100630684],[0.00272984304673],[1.50442053909e-05],[5.94749611639e-05],[6.14358432326e-07],[7.92982678649e-10],[5.11580531055e-12],[- 1.48408357403e-13],[1.26184642808e-15]])
	elif l == 17 :
		n = np.array([[0.0],[0.24899229758],[0.741095349995],[1.23042363403],[1.73205080757],[2.23362606168],[2.59608311505],[2.86127957606],[3.2053337945],[3.63531851904],[4.18495601767],[5.18701603991],[5.69817776849],[6.36339449434],[7.1221067008],[7.98077179859],[9.01693978989]])
		w = np.array([[0.139110222363],[0.103876871256],[0.176075987416],[0.0774436027463],[0.0546775561435],[0.0073530110205],[0.0115292470654],[- 0.00277121890078],[0.00212022595596],[8.32360452958e-05],[5.56911589811e-05],[6.90862611791e-07],[- 1.34860173485e-08],[1.55421959928e-09],[- 1.93413050009e-11],[2.66406251662e-13],[- 9.93139132868e-16]])
	elif l == 18 :
		n = np.array([[0.0],[0.24899229758],[0.741095349995],[1.23042363403],[1.73205080757],[2.23362606168],[2.59608311505],[2.86127957606],[3.2053337945],[3.63531851904],[4.18495601767],[4.73643308595],[5.18701603991],[5.69817776849],[6.36339449434],[7.1221067008],[7.98077179859],[9.01693978989]])
		w = np.array([[0.000514894508069],[0.191760115888],[0.148070831155],[0.092364726717],[0.0452736854652],[0.0156734737519],[0.00315544626919],[0.00231134524035],[0.000818953927502],[0.000275242141168],[3.5729348199e-05],[2.73422068012e-06],[2.46764213458e-07],[2.13941944796e-08],[4.60117603487e-10],[3.09722235761e-12],[5.45004126506e-15],[1.05413265823e-18]])
	elif l == 19 :
		n = np.array([[0.0],[0.24899229758],[0.741095349995],[1.23042363403],[1.73205080757],[2.23362606168],[2.59608311505],[2.86127957606],[3.2053337945],[3.63531851904],[4.18495601767],[4.73643308595],[5.18701603991],[5.69817776849],[6.36339449434],[7.1221067008],[7.98077179859],[9.01693978989]])
		w = np.array([[0.000514894508069],[0.191760115888],[0.148070831155],[0.092364726717],[0.0452736854652],[0.0156734737519],[0.00315544626919],[0.00231134524035],[0.000818953927502],[0.000275242141168],[3.5729348199e-05],[2.73422068012e-06],[2.46764213458e-07],[2.13941944796e-08],[4.60117603487e-10],[3.09722235761e-12],[5.45004126506e-15],[1.05413265823e-18]])
	elif l == 20 :
		n = np.array([[0.0],[0.24899229758],[0.741095349995],[1.23042363403],[1.73205080757],[2.23362606168],[2.59608311505],[2.86127957606],[3.2053337945],[3.63531851904],[4.18495601767],[4.73643308595],[5.18701603991],[5.69817776849],[6.36339449434],[7.1221067008],[7.98077179859],[9.01693978989]])
		w = np.array([[0.000514894508069],[0.191760115888],[0.148070831155],[0.092364726717],[0.0452736854652],[0.0156734737519],[0.00315544626919],[0.00231134524035],[0.000818953927502],[0.000275242141168],[3.5729348199e-05],[2.73422068012e-06],[2.46764213458e-07],[2.13941944796e-08],[4.60117603487e-10],[3.09722235761e-12],[5.45004126506e-15],[1.05413265823e-18]])
	elif l == 21 :
		n = np.array([[0.0],[0.24899229758],[0.741095349995],[1.23042363403],[1.73205080757],[2.23362606168],[2.59608311505],[2.86127957606],[3.2053337945],[3.63531851904],[4.18495601767],[4.73643308595],[5.18701603991],[5.69817776849],[6.36339449434],[7.1221067008],[7.98077179859],[9.01693978989]])
		w = np.array([[0.000514894508069],[0.191760115888],[0.148070831155],[0.092364726717],[0.0452736854652],[0.0156734737519],[0.00315544626919],[0.00231134524035],[0.000818953927502],[0.000275242141168],[3.5729348199e-05],[2.73422068012e-06],[2.46764213458e-07],[2.13941944796e-08],[4.60117603487e-10],[3.09722235761e-12],[5.45004126506e-15],[1.05413265823e-18]])
	elif l == 22 :
		n = np.array([[0.0],[0.24899229758],[0.741095349995],[1.23042363403],[1.73205080757],[2.23362606168],[2.59608311505],[2.86127957606],[3.2053337945],[3.63531851904],[4.18495601767],[4.73643308595],[5.18701603991],[5.69817776849],[6.36339449434],[7.1221067008],[7.98077179859],[9.01693978989]])
		w = np.array([[0.000514894508069],[0.191760115888],[0.148070831155],[0.092364726717],[0.0452736854652],[0.0156734737519],[0.00315544626919],[0.00231134524035],[0.000818953927502],[0.000275242141168],[3.5729348199e-05],[2.73422068012e-06],[2.46764213458e-07],[2.13941944796e-08],[4.60117603487e-10],[3.09722235761e-12],[5.45004126506e-15],[1.05413265823e-18]])
	elif l == 23 :
		n = np.array([[0.0],[0.24899229758],[0.741095349995],[1.23042363403],[1.73205080757],[2.23362606168],[2.59608311505],[2.86127957606],[3.2053337945],[3.63531851904],[4.18495601767],[4.73643308595],[5.18701603991],[5.69817776849],[6.36339449434],[7.1221067008],[7.98077179859],[9.01693978989]])
		w = np.array([[0.000514894508069],[0.191760115888],[0.148070831155],[0.092364726717],[0.0452736854652],[0.0156734737519],[0.00315544626919],[0.00231134524035],[0.000818953927502],[0.000275242141168],[3.5729348199e-05],[2.73422068012e-06],[2.46764213458e-07],[2.13941944796e-08],[4.60117603487e-10],[3.09722235761e-12],[5.45004126506e-15],[1.05413265823e-18]])
	elif l == 24 :
		n = np.array([[0.0],[0.24899229758],[0.741095349995],[1.23042363403],[1.73205080757],[2.23362606168],[2.59608311505],[2.86127957606],[3.2053337945],[3.63531851904],[4.18495601767],[4.73643308595],[5.18701603991],[5.69817776849],[6.36339449434],[7.1221067008],[7.98077179859],[9.01693978989]])
		w = np.array([[0.000514894508069],[0.191760115888],[0.148070831155],[0.092364726717],[0.0452736854652],[0.0156734737519],[0.00315544626919],[0.00231134524035],[0.000818953927502],[0.000275242141168],[3.5729348199e-05],[2.73422068012e-06],[2.46764213458e-07],[2.13941944796e-08],[4.60117603487e-10],[3.09722235761e-12],[5.45004126506e-15],[1.05413265823e-18]])
	elif l == 25 :
		n = np.array([[0.0],[0.24899229758],[0.741095349995],[1.23042363403],[1.73205080757],[2.23362606168],[2.59608311505],[2.86127957606],[3.2053337945],[3.63531851904],[4.18495601767],[4.73643308595],[5.18701603991],[5.69817776849],[6.36339449434],[7.1221067008],[7.98077179859],[9.01693978989]])
		w = np.array([[0.000514894508069],[0.191760115888],[0.148070831155],[0.092364726717],[0.0452736854652],[0.0156734737519],[0.00315544626919],[0.00231134524035],[0.000818953927502],[0.000275242141168],[3.5729348199e-05],[2.73422068012e-06],[2.46764213458e-07],[2.13941944796e-08],[4.60117603487e-10],[3.09722235761e-12],[5.45004126506e-15],[1.05413265823e-18]])
	return n,w


def SpGrGetSeq(d, norm):

	seq = np.zeros(d, dtype=np.int)
	a = norm-d
	seq[0] = a
	fs = np.copy(seq)
	c = 1
	while seq[d-1]<a:
		if c == d:
			for i in range(c-1, (-1)+(-1), -1):
				c = i
				if seq[i-1] != 0:
					break

		seq[c-1] = seq[c-1]-1
		c = c+1
		seq[c-1] = a-sum(seq[0:c-1])
		if c<d:
			seq[(c+1)-1:d] = np.zeros(d-c, dtype=np.int)
		
		tmp = np.vstack((fs, seq))
		fs = np.copy(tmp)

	fs = fs+1
	return fs
		

def SpGrKronProd(n1D, w1D):
	nodes = n1D[0]
	weights = w1D[0]
	for j in np.arange(1., len(n1D)):
		newnodes = n1D[int(j)]
		tmp_a = np.kron(nodes, np.ones((len(newnodes),1)))
		tmp_b = np.kron(np.ones((len(nodes),1)), newnodes)
		tmp_nodes = np.hstack((tmp_a, tmp_b))
		nodes = np.copy(tmp_nodes)
		weights = np.kron(weights, w1D[int(j)])

	return nodes, weights
				

def nwspgr(distribution,dim,k,sym):
        if distribution in 'GQU' or distribution in 'GQN' or distribution in 'KPU' or distribution in'KPN' :
                print 'Distribution :', distribution
        else :
                print 'Wrong argument for distribution'
                exit()

	n1D = []
	w1D = []
	R1D = np.zeros(k)

	for level in range(0, k) :
		n, w = feval(distribution, level+1)	
		R1D[level] = w.shape[0]
		n1D.append(n)
		w1D.append(w)
		
	minq = max(0, k-dim)
	maxq = k-1
	nodes = []
	weights = []		

	for q in range(minq, maxq+1) :
		r = len(weights)
		bq = (-1)**(maxq-q) * factorial(dim-1)/factorial(dim+q-k)/factorial(k-q-1)
		is_ = SpGrGetSeq(dim, dim+q)
		Rq = np.prod(np.asmatrix(R1D[is_-1]), axis=1)
		sRq = sum(Rq)
		if nodes == [] :
			a = np.zeros((sRq,dim))
			nodes = np.copy(a)
		else :
			a = np.zeros((sRq,dim))
			tmp_nodes = np.vstack((nodes, a))
			nodes = np.copy(tmp_nodes)

		if weights == [] :
			a = np.zeros((sRq,1))
			weights = np.copy(a)

		else :
			a = np.zeros((sRq,1))
			tmp_weights = np.vstack((weights, a))
			weights = np.copy(tmp_weights)
		
		for j in range(0, np.asmatrix(is_).shape[0]) :
			midx = np.copy(np.asmatrix(is_)[j,:])	
			input0 = []
			input1 = []
			for i in range(0, midx.shape[1]) : 
				a = n1D[midx[0][i]-1]
				b = w1D[midx[0][i]-1]
				input0.append(a)
				input1.append(b)
			newn,neww = SpGrKronProd(input0, input1)
			nodes[r:(r+Rq[j]),:] = newn
			weights[r:(r+Rq[j]),:] = (bq * neww)
			r = r + Rq[j]

		tmp_nodes = nodes[np.lexsort(np.fliplr(nodes).T)]
		sortvec = np.lexsort(np.fliplr(nodes).T)
		nodes = np.copy(tmp_nodes)
		weights = np.copy(weights[sortvec])
		keep = []
		lastkeep = 0
		keep.append(0)

		for j in range(1, len(nodes)) :
			if (nodes[j, :] == nodes[j-1, :]).all() :
				weights[lastkeep] = weights[lastkeep] + weights[j]
			else :
				lastkeep = j
				keep.append(j)


		nodes = np.copy(nodes[keep,:])
		weights = np.copy(weights[keep])

	if sym in 'symmetric' :
		nr = len(weights)
		m = n1D[0]
		for j in range(0, dim) :
			keep = np.zeros(nr,dtype=np.int)
			numnew = 0
			for r in range(0, nr) :
				if nodes[r,j] != m :	
					numnew = numnew + 1
					keep[numnew-1] = r	

			if numnew > 0 :
				tmp_nodes = np.vstack((nodes, nodes[keep[0:numnew],:]))
				nodes = np.copy(tmp_nodes)
				nodes[nr:nr+numnew,j] = 2*m - nodes[nr:nr+numnew,j]
				tmp_weights = np.vstack((weights, weights[keep[0:numnew]]))
				weights = np.copy(tmp_weights)
				nr = nr+numnew
		
	tmp_nodes = nodes[np.lexsort(np.fliplr(nodes).T)]
	sortvec = np.lexsort(np.fliplr(nodes).T)
	nodes = np.copy(tmp_nodes)
	weights = np.copy(weights[sortvec])

	weights = weights/sum(weights)
	
	return nodes, weights	

